DROP TABLE IF EXISTS telegram_notifications;
DROP TABLE IF EXISTS asset;
DROP TABLE IF EXISTS gegenstand_to_lagerort;
DROP TABLE IF EXISTS lagerort;
DROP TABLE IF EXISTS roles_to_user;
DROP TABLE IF EXISTS pdfs_to_user;
DROP TABLE IF EXISTS held_geldboerse;
DROP TABLE IF EXISTS held_inventar;
DROP TABLE IF EXISTS held_uebersicht;
DROP TABLE IF EXISTS roles_to_rights;
DROP TABLE IF EXISTS zauberspeicher;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS rights;
DROP TABLE IF EXISTS gruppen;
DROP TABLE IF EXISTS helden;
DROP TABLE IF EXISTS held_version;
DROP TABLE IF EXISTS pdfs;
DROP TABLE IF EXISTS raumplan_ebene;
DROP TABLE IF EXISTS raumplan;
DROP TABLE IF EXISTS users;
CREATE TABLE users
(
    id        int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name      varchar(40) NOT NULL,
    password  varchar(60),
    token     varchar(64),
    gruppe_id bigint,
    can_write boolean     NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);
CREATE TABLE gruppen
(
    id    int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name  varchar(40) NOT NULL,
    datum int,
    PRIMARY KEY (id),
    UNIQUE (name)
);
CREATE TABLE helden
(
    id          int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id     bigint       NOT NULL,
    name        varchar(200) NOT NULL,
    gruppe_id   int          NOT NULL,
    public      boolean      NOT NULL,
    deleted     boolean      NOT NULL,
    active      boolean      NOT NULL,
    hkey        bigint       NOT NULL,
    lock_expire timestamp,
    PRIMARY KEY (id)
);
CREATE TABLE held_version
(
    id           int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    heldid       bigint      NOT NULL,
    version      int         NOT NULL,
    created_date timestamp   NOT NULL,
    last_event   varchar(200),
    cache_id     varchar(36) NOT NULL,
    ap           int         NOT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE roles
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(20) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);
CREATE TABLE rights
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(20) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);
CREATE TABLE roles_to_rights
(
    role_id  int,
    right_id int,
    FOREIGN KEY (role_id)
        REFERENCES roles (id),
    FOREIGN KEY (right_id)
        REFERENCES rights (id),
    PRIMARY KEY (
                 role_id,
                 right_id
        )
);
CREATE TABLE roles_to_user
(
    role_id int,
    user_id int,
    FOREIGN KEY (role_id)
        REFERENCES roles (id),
    FOREIGN KEY (user_id)
        REFERENCES users (id),
    PRIMARY KEY (
                 user_id,
                 role_id
        )
);
CREATE TABLE pdfs
(
    id   int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(20) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);
CREATE TABLE pdfs_to_user
(
    pdf_id  int,
    user_id int,
    FOREIGN KEY (pdf_id)
        REFERENCES pdfs (id),
    FOREIGN KEY (user_id)
        REFERENCES users (id),
    PRIMARY KEY (
                 pdf_id,
                 user_id
        )
);
INSERT INTO roles
VALUES (1,
        'Administrator');
INSERT INTO rights
VALUES (1,
        'CREATE_USER'),
       (2,
        'VIEW_ALL'),
       (3,
        'EDIT_ALL');
INSERT INTO roles_to_rights
VALUES (1,
        1),
       (1,
        2),
       (1,
        3);
CREATE TABLE zauberspeicher
(
    id           int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    zauber       varchar(100) NOT NULL,
    heldid       bigint       NOT NULL,
    kosten       int          NOT NULL,
    qualitaet    int          NOT NULL,
    komplexitaet varchar(1)   NOT NULL,
    spomos       varchar(200) NOT NULL,
    zfw          int          NOT NULL,
    mr           int,
    PRIMARY KEY (id),
    FOREIGN KEY (heldid)
        REFERENCES helden (id)
);
CREATE TABLE held_inventar
(
    id        int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name      varchar(200) NOT NULL,
    heldid    bigint       NOT NULL,
    container int,
    gewicht   float,
    anzahl    int          NOT NULL,
    notiz     varchar(200),
    PRIMARY KEY (id),
    FOREIGN KEY (heldid)
        REFERENCES helden (id),
    FOREIGN KEY (container)
        REFERENCES held_inventar (id)
);
CREATE TABLE held_geldboerse
(
    id      int    NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    held_id bigint NOT NULL,
    anzahl  int    NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (held_id),
    FOREIGN KEY (held_id)
        REFERENCES helden (id)
);
CREATE TABLE asset
(
    id     int    NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    gruppe bigint NOT NULL,
    name   varchar(100),
    PRIMARY KEY (id),
    UNIQUE (gruppe),
    FOREIGN KEY (gruppe)
        REFERENCES gruppen (id)
);
CREATE TABLE lagerort
(
    id     int         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name   varchar(40) NOT NULL,
    heldid bigint      NOT NULL,
    notiz  varchar(200),
    PRIMARY KEY (id),
    FOREIGN KEY (heldid)
        REFERENCES helden (id)
);
CREATE TABLE gegenstand_to_lagerort
(
    id       int          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    lagerort bigint,
    name     varchar(200) NOT NULL,
    amount   int          NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (lagerort)
        REFERENCES lagerort (id)
);
CREATE TABLE telegram_notifications
(
    id            int NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    gruppe_id     bigint,
    guild_id      bigint,
    chat_id       bigint,
    listener_type int,
    PRIMARY KEY (id),
    FOREIGN KEY (gruppe_id)
        REFERENCES gruppen (id),
    UNIQUE (
            guild_id,
            gruppe_id,
            chat_id,
            listener_type
        )
);